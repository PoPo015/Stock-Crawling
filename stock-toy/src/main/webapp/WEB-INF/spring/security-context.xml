<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"  
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">
        
        <http auto-config="true" use-expressions="true"> <!-- auto-config 속성 자동 설정  use-expression 속성 intercept-url에 SpEL 문법의 사용 유무-->
            <!-- <intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/> -->
            <intercept-url pattern="/user*" access="hasAnyRole('ROLE_USER','ROLE_MEMBER','ROLE_ADMIN')"/>
   			<intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')"/>
   			<intercept-url pattern="/**" access="permitAll"/>
        </http>   <!-- 모든 URL 접속하기 위해선 ROLE_USER 권한 필요 추후에 원하는 권한설정대로 커스텀
        	 intercept-url 경우 위에서부터 매칭 되서 특수한 경우를 위에 둠 .  SpEL 문법 관련 링크 : https://to-dy.tistory.com/75?category=720806  -->
        
        <authentication-manager> <!-- 인증과 관련된 정보 설정 -->
            <authentication-provider> <!-- 인증에 대한 정보를 제공하는 제공자는 지정하는 태그  -->
                <user-service> <!--  사용자 정보 설정 : 사용자ID,패스워드권한 지정 가능 -->
                    <user name="user" password="{noop}userPw" authorities="ROLE_USER"/> <!-- 스프링 최신버전에서는 password에 {noop}를 붙여줘야함. -->
<!--                     <user name="member" password="{noop}memPw" authorities="ROLE_MEMBER"/> -->
                    <user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
                </user-service>
            </authentication-provider>
        </authentication-manager>
    
</beans:beans>

<!--  02.21 2행 : namespace security 지정
 참고 블로그 :  https://to-dy.tistory.com/70 -->